---
apiVersion: v1
kind: Namespace
metadata:
  name: projectcontour


---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: contour
  namespace: projectcontour


---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: contour
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - services
  - secrets
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch


---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: contour
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: contour
subjects:
- kind: ServiceAccount
  name: contour
  namespace: projectcontour


---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: contour
  namespace: projectcontour
  labels:
    app: contour
spec:
  selector:
    matchLabels:
      app: contour
  template:
    metadata:
      labels:
        app: contour
    spec:
      serviceAccountName: contour
      containers:
        - name: contour
          image: docker.io/projectcontour/contour
          ports:
            - name: http
              containerPort: 8080
            - name: https
              containerPort: 8443


---
apiVersion: v1
kind: Service
metadata:
  name: contour
  namespace: projectcontour
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8080
    - name: https
      port: 443
      targetPort: 8443
  selector:
    app: contour


---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: contour
  namespace: projectcontour
  annotations:
    kubernetes.io/ingress.class: "contour"
spec:
  rules:
  - host: example321.com
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:
          service:
            name: simple
            port:
              number: 80


---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: contour-leaderelection
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create


---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: contour-leaderelection
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: contour-leaderelection
subjects:
- kind: ServiceAccount
  name: contour
  namespace: projectcontour


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: simple
  namespace: projectcontour
spec:
  replicas: 2
  selector:
    matchLabels:
      app: simple
  template:
    metadata:
      labels:
        app: simple
    spec:
      containers:
      - name: app
        image: gcr.io/google-samples/hello-app:1.0
        ports:
        - containerPort: 8080